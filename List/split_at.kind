// Splits a list into two parts at the specified index.
// - A: Input type.
// - xs: Input list.
// - n: Split index.
// = Pair of lists: first n elements and the rest.
List/split_at : âˆ€(A: *) (List A) -> Nat -> (Pair (List A) (List A))
| A xs n = #Pair{(List/take A xs n) (List/drop A xs n)}

#test: (List/split_at U64 [1 2 3] #0) == #Pair{[] [1 2 3]}
#test: (List/split_at U64 [1 2 3] #2) == #Pair{[1 2] [3]}
#test: (List/split_at U64 [1 2 3] #5) == #Pair{[1 2 3] []}
#test: (List/split_at U64 [] #3) == #Pair{[] []}
// Takes the first n elements from a list.
// - A: Element type.
// - n: Number of elements to take.
// - xs: Input list.
// = List with first n elements of xs, or all of xs if n > length xs.
List/take : âˆ€(A: *) Nat -> (List A) -> (List A)
| A #Zero    xs            = #Nil
| A #Succ{n} #Nil          = #Nil
| A #Succ{n} #Cons{x tail} = #Cons{x (List/take A n tail)}

#test: (List/take U64 #0 [1 2 3]) == []
#test: (List/take U64 #2 [1 2 3]) == [1 2]
#test: (List/take U64 #5 [1 2 3]) == [1 2 3]

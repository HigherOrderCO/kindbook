// Calculates the sum of a list of nats.
// - xs: Input list of nats.
// = Sum of all numbers in the list.
List/sum : (List Nat) -> Nat
| xs = (List/foldr Nat Nat xs #Zero Nat/add)

#test: (List/sum []) == #0
#test: (List/sum [#1 #2 #3]) == #6
#test: (List/sum [#0 #0 #0]) == #0
#test: (List/sum [#5]) == #5
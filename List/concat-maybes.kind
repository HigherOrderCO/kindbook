// Helper function for concat-maybes
concat-maybes-go
: ∀(A: *)
  ∀(ma: (Maybe/Maybe A))
  ∀(acc: (List/List A))
  (List/List A)
= λA λ{
  #None: λacc acc
  #Some: λmaValue λacc #Cons{maValue acc}
}

// FIXME:
// Concatenates all of the `Some` values in a list of Maybe.
// - A: The type of elements in the Maybe values.
// - xs: The input list of Maybe values.
// = A new list containing all the values from `Some` constructors.
List/concat-maybes
: ∀(A: *)
  ∀(xs: (List/List (Maybe/Maybe A)))
  (List/List A)
= λA λxs (List/foldr _ _ (concat-maybes-go  _) #Nil{} xs _)

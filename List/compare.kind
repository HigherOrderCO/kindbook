// Compares two lists lexicographically.
// - A: The type of elements in the lists.
// - ord: The Ord instance for type A.
// - xs: The first list.
// - ys: The second list.
// = LT if xs < ys, EQ if xs = ys, GT if xs > ys.
List/compare : ∀(A: *) ∀(ord: (Ord A)) (List A) -> (List A) -> Cmp
| A ord #Nil        #Nil        = #EQ
| A ord #Nil        #Cons{y ys} = #LT
| A ord #Cons{x xs} #Nil        = #GT
| A ord #Cons{x xs} #Cons{y ys} =
  match (Ord/compare A ord x y) {
    #LT: #LT
    #EQ: (List/compare A ord xs ys)
    #GT: #GT
  }

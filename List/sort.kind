// Sorts a list in ascending order.
// - A: Element type.
// - leq: Less-than-or-equal comparison function.
// - xs: Input list to be sorted.
// = New list containing all elements from xs in ascending order.
List/sort : âˆ€(A: *) (A -> A -> Bool) -> (List A) -> (List A)
List/sort = List/insertion-sort

// TODO: Use a better sorting algorithm like merge sort or quicksort

#test: (List/sort Nat Nat/lte [#3 #1 #4 #1 #5]) == [#1 #1 #3 #4 #5]
#test: (List/sort Nat Nat/lte []) == []
#test: (List/sort Nat Nat/lte [#2 #1]) == [#1 #2]
#test: (List/sort Nat Nat/lte [#1]) == [#1]

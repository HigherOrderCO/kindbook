// Computes the cartesian product of two lists, applying a function to each pair.
// - A: First input type.
// - B: Second input type.
// - C: Output type.
// - xs: First input list.
// - ys: Second input list.
// - f: Function to apply to each pair.
// = List of results from applying f to all possible pairs.
List/cartesian_product_with
: ∀(A: *)
  ∀(B: *)
  ∀(C: *)
  (List A) 
  -> (List B) 
  -> (A -> B -> C) 
  -> (List C)
| A B C #Nil             ys f = []
| A B C #Cons{head tail} ys f =
  (List/append C
    (List/map B C ys (f head))
    (List/cartesian_product_with A B C tail ys f))

#test: (List/cartesian_product_with U64 U64 U64 [] [1 2 3] (U64/add)) == []
#test: (List/cartesian_product_with U64 U64 U64 [1 2 3] [] (U64/add)) == []
#test: (List/cartesian_product_with U64 U64 U64 [1 2] [3 4] (U64/add)) == [4 5 5 6]
#test: (List/cartesian_product_with U64 U64 (Pair U64 U64) [1 2] [3 4] (λf λs #Pair{f s})) == [#Pair{1 3} #Pair{1 4} #Pair{2 3} #Pair{2 4}]
// Dependent eliminator for lists.
// - A: Element type.
// - P: Motive.
// - xs: Input list.
// - nil: Empty list case.
// - cons: Non_empty list case.
// = Elimination result.
List/match
: ∀(A: *)
  ∀(P: ∀(xs: (List A)) *)
  ∀(xs: (List A))
  ∀(nil: (P #Nil))
  ∀(cons: ∀(x: A) ∀(xs: (List A)) (P (#Cons{x xs})))
  (P xs)
| A P #Nil             nil cons = nil
| A P #Cons{head tail} nil cons = (cons head tail)

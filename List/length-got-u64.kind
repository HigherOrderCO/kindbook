// Computes the length of a list while preserving the original list.
// - A: Input type.
// - xs: Input list.
// = A pair containing the original list and its length as a U64.
List/length-got-u64 : âˆ€(A: *) (List A) -> (Pair (List A) U64)
| A #Nil             = #Pair{#Nil 0}
| A #Cons{head tail} =
  let #Pair{rest len} = (List/length-got-u64 A tail)
  #Pair{#Cons{head rest} (+ 1 len)}

#test: (List/length-got-u64 Nat []) == #Pair{[] 0}
#test: (List/length-got-u64 Nat [#0]) == #Pair{[#0] 1}
#test: (List/length-got-u64 Nat [#0 #1 #2]) == #Pair{[#0 #1 #2] 3}

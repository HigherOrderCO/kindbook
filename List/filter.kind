// Filters a list based on a predicate function.
// - A: The type of elements in the list.
// - fn: The function used to test each element.
// - xs: The input list.
// = A new list containing only elements that satisfy the predicate.
List/filter
: ∀(A: *)
  ∀(fn: ∀(a: A) Bool)
  ∀(xs: (List A))
  (List A)
= λA λfn λ{
  #Nil: #Nil
  #Cons: λxs.head λxs.tail
    let tail = (List/filter _ fn xs.tail)
    (Bool/if _ (fn xs.head) (#Cons{xs.head tail}) tail)
}

// Applies a function to a specific element in a list.
// - A: Element type.
// - n: Index of element to modify (0-based).
// - fn: Function to apply.
// - xs: Input list.
// = New list with function applied to nth element.
List/set : âˆ€(A: *) Nat -> (A -> A) -> (List A) -> (List A)
| A #Zero    fn #Cons{head tail} = #Cons{(fn head) tail}
| A #Succ{n} fn #Cons{head tail} = #Cons{head (List/set A n fn tail)}
| A n        fn #Nil             = #Nil

#test: (List/set U64 #0 (U64/add 1) [1 2 3]) == [2 2 3]
#test: (List/set U64 #1 (U64/add 1) [1 2 3]) == [1 3 3]
#test: (List/set U64 #2 (U64/add 1) [1 2 3]) == [1 2 4]
#test: (List/set U64 #3 (U64/add 1) [1 2 3]) == [1 2 3]
#test: (List/set U64 #0 (U64/add 1) []) == []
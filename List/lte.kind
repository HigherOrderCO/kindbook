// Checks if one list is less than or equal to another lexicographically.
// - A: The type of elements in the lists.
// - O: An Ord instance for type A.
// - xs: The first list.
// - ys: The second list.
// = True if xs is lexicographically less than or equal to ys, False otherwise.
List/lte
: ∀(A: *)
  ∀(O: (Trait/Ord A))
  ∀(xs: (List/List A))
  ∀(ys: (List/List A))
  Bool/Bool
= λA λO λ{
  #Nil: λ{
    #Nil: #True{}
    #Cons: λys.head λys.tail #True{}
  }
  #Cons: λxs.head λxs.tail λ{
    #Nil: #False{}
    #Cons: λys.head λys.tail
      let lt = (Trait/Ord/lt _ O xs.head ys.head)
      let gt = (Trait/Ord/gt _ O xs.head ys.head)
      (Bool/if Bool/Bool lt #True{}
        (Bool/if Bool/Bool gt #False{}
          (List/lte _ O xs.tail ys.tail)))
  }
}
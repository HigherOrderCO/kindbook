// Computes the difference between two lists.
// - A: Element type.
// - e: Equality function for A.
// - xs: First list.
// - ys: Second list.
// = New list with elements from xs not in ys.
List/difference : ∀(A: *) (IsEqual A) -> (List A) -> (List A) -> (List A)
| A e xs ys = (List/filter A (λx (Bool/not (List/contains A e x ys))) xs)

#test: (List/difference U64 (U64/IsEqual) [1 2 3] [2 3 4]) == [1]
#test: (List/difference U64 (U64/IsEqual) [1 2 3] [4 5 6]) == [1 2 3]
#test: (List/difference U64 (U64/IsEqual) [1 2 3] [1 2 3]) == []
#test: (List/difference U64 (U64/IsEqual) [] [1 2 3]) == []
#test: (List/difference U64 (U64/IsEqual) [1 2 3] []) == [1 2 3]
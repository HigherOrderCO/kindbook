// Unzips a list of pairs into two separate lists.
// - A: First type.
// - B: Second type.
// - xs: Input list of pairs to unzip.
// = Pair of lists containing first and second elements of pairs.
List/unzip : ∀(A: *) ∀(B: *) (List (Pair A B)) -> (Pair (List A) (List B))
| A B xs = (List/unzip-with (Pair A B) A B (λx x) xs)

#test: (List/unzip U64 U64 #Nil) == #Pair{#Nil #Nil}
#test: (List/unzip U64 U64 [#Pair{1 2} #Pair{3 4}]) == #Pair{[1 3] [2 4]}
#test: (List/unzip U64 U64 [#Pair{1 2}]) == #Pair{[1] [2]}
#test: (List/unzip U64 Bool [#Pair{1 #True} #Pair{2 #False}]) == #Pair{[1 2] [#True #False]}
// Takes the first n elements from an Omega list.
// - A: The type of elements in the list.
// - n: The number of elements to take.
// - omega: The Omega list to take elements from.
// = A finite list containing the first n elements of omega, or all elements if n > length of omega's prefix.
LO/take
: ∀(A: *)
  ∀(n: Nat)
  ∀(omega: (LO/Omega A))
  (List A)
= λA λ{
  #Zero: λomega
    #Nil
  #Succ: λn.pred λ{
    #MkOmega: λomega.prefix λ{
      #Nil:
        #Nil
      #Cons: λxs.head λxs.tail
        #Cons{xs.head (LO/take A n.pred (#MkOmega{xs.tail}))}
    }
  }
}


// Unzips a list with a given function that generates a pair.
// - A: Input type.
// - B: First output type.
// - C: Second output type.
// - f: Function to apply to each element, generating a pair.
// - xs: Input list to unzip.
// = Pair of lists containing first and second elements of pairs.
List/unzip-with : ∀(A: *) ∀(B: *) ∀(C: *) (A -> (Pair B C)) -> (List A) -> (Pair (List B) (List C))
| A B C f #Nil             = #Pair{#Nil #Nil}
| A B C f #Cons{head tail} with #Pair{(f head) (List/unzip-with A B C f tail)} :: (Pair (Pair B C) (Pair (List B) (List C)))
. | #Pair{#Pair{xhead yhead} #Pair{xtail ytail}} = 
  #Pair{#Cons{xhead xtail} #Cons{yhead ytail}}
       

#test: (List/unzip-with U64 U64 U64 (λx #Pair{x x}) [1 2 3]) == #Pair{[1 2 3] [1 2 3]}
#test: (List/unzip-with U64 U64 U64 (λx #Pair{x (+ x 1)}) [1 2 3]) == #Pair{[1 2 3] [2 3 4]}
#test: (List/unzip-with U64 U64 U64 (λx #Pair{x x}) []) == #Pair{[] []}
// Unzips a list with a given function that generates a pair.
// - A: Input type.
// - B: First output type.
// - C: Second output type.
// - xs: Input list to unzip.
// - f: Function to apply to each element, generating a pair.
// = Pair of lists containing first and second elements of pairs.
List/unzip_with : ∀(A: *) ∀(B: *) ∀(C: *) (List A) -> (A -> (Pair B C)) -> (Pair (List B) (List C))
| A B C #Nil f = #Pair{#Nil #Nil}
| A B C #Cons{head tail} f with #Pair{(f head) (List/unzip_with A B C tail f)} :: (Pair (Pair B C) (Pair (List B) (List C)))
. | #Pair{#Pair{xhead yhead} #Pair{xtail ytail}} = 
  #Pair{#Cons{xhead xtail} #Cons{yhead ytail}}
       

#test: (List/unzip_with U64 U64 U64 [] (λx #Pair{x x})) == #Pair{[] []}
#test: (List/unzip_with U64 U64 U64 [1 2 3] (λx #Pair{x x})) == #Pair{[1 2 3] [1 2 3]}
#test: (List/unzip_with U64 U64 U64 [1 2 3] (λx #Pair{x (+ x 1)})) == #Pair{[1 2 3] [2 3 4]}
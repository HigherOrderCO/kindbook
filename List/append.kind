// Appends two lists.
// - A: Element type.
// - xs: First list.
// - ys: Second list.
// = New list with all elements from both inputs.
List/append : âˆ€(A: *) (List A) -> (List A) -> (List A)
| A #Nil             ys = ys
| A #Cons{head tail} ys = #Cons{head (List/append A tail ys)}

#test: (List/append U64 [1 2] [3 4]) == [1 2 3 4]
#test: (List/append U64 [] [1 2 3]) == [1 2 3]
#test: (List/append U64 [1 2 3] []) == [1 2 3]
#test: (List/append U64 [] []) == []
#test: (List/append Bool [#True #False] [#True]) == [#True #False #True]
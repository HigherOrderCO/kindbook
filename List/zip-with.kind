// Zips two lists with a combining function.
// - A: First input type.
// - B: Second input type.
// - C: Output type.
// - f: Combining function.
// - xs: First input list.
// - ys: Second input list.
// = Combined list.
List/zip-with : ∀(A: *) ∀(B: *) ∀(C: *) (A -> B -> C) -> (List A) -> (List B) -> (List C)
| A B C f #Nil        ys          = #Nil
| A B C f #Cons{x xs} #Nil        = #Nil
| A B C f #Cons{x xs} #Cons{y ys} = #Cons{(f x y) (List/zip-with A B C f xs ys)}

#test: (List/zip-with U64 U64 U64 U64/add [1 2 3] [4 5 6]) == [5 7 9]

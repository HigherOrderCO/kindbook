// Finds the first element satisfying a predicate.
// - A: Element type.
// - fn: Predicate function.
// - xs: Input list.
// = Some x if found, None otherwise.
List/find : ∀(A: *) (A -> Bool) -> (List A) -> (Maybe A)
| A fn #Nil             = #None
| A fn #Cons{head tail} =
  if (fn head) {
    #Some{head}
  } else {
    (List/find A fn tail)
  }

#test: (List/find U32 (λx (U32/to-bool (== x 2))) [1 2 3]) == #Some{2}
#test: (List/find U32 (λx (U32/to-bool (== x 4))) [1 2 3]) == #None

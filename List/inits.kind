// Returns all initial segments of a list, shortest first.
// - A: Element type.
// - xs: Input list.
// = List of all initial segments of xs.
List/inits : ∀(A: *) (List A) -> (List (List A))
| A xs = #Cons{#Nil (List/inits/go A xs)}

// Generates the tail of the inits list
List/inits/go : ∀(A: *) (List A) -> (List (List A))
| A #Nil             = #Nil
| A #Cons{head tail} = #Cons{#Cons{head #Nil} (List/map (List A) (List A) (List/inits/go A tail) (λy #Cons{head y}))}

#test: (List/inits U64 []) == [[]]
#test: (List/inits U64 [1]) == [[] [1]]
#test: (List/inits U64 [1 2 3]) == [[] [1] [1 2] [1 2 3]]

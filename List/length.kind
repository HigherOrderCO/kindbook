// Computes the length of a list.
// - A: Element type.
// - xs: Input list.
// = Number of elements.
List/length : âˆ€(A: *) (List A) -> Nat
| A #Nil             = #Zero
| A #Cons{head tail} = #Succ{(List/length A tail)}

#test: (List/length Nat []) == #0
#test: (List/length U64 [1 2 3]) == #3


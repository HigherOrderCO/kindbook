use Bend/Fun/Book as Book
use Bend/Fun/FnDef as FnDef
use Bend/Fun/Rule as Rule

Book/mmap_rules :
  ∀(M: * -> *) (Monad M) -> (Rule -> (M Rule)) -> Book -> (M Book)
| M m@#Monad{pure bind} f #Book{defs adts ctrs} =
  (bind _ _ (BinMap/mmap M m _ _ defs (mmap_def _ m f)) λdefs
  (pure Book #Book{defs adts ctrs}))

mmap_def :
  ∀(M: * -> *) (Monad M) -> (Rule -> (M Rule)) -> FnDef -> (M FnDef)
| M m@#Monad{pure bind} f #FnDef{nam typ chk rul src} =
  (bind _ _ (List/mmap M m _ _ rul f) λrul
  (pure _ #FnDef{nam typ chk rul src}))

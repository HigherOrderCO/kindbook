// Bend/Compile/NetToHvm/nets_to_hvm

Bend/Compile/NetToHvm/nets_to_hvm (nets: (List Bend/Net/Net)) : (Result Bend/Hvm/Book/Book String)
  do Result {
    ask nets = (Bend/Compile/NetToHvm/nets_to_hvm/go nets)
    #Done{(Bend/Hvm/Book/Book.new (BinMap/from_list nets))}
  }

Bend/Compile/NetToHvm/nets_to_hvm/go (nets: (List Bend/Net/Net)) : (Result (List (Pair Bits Bend/Hvm/Net/Net)) String)
| #Nil = #Done{#Nil}
| (#Cons net nets) =
  do Result {
    let name = (Bend/Net/Net.name net)
    ask net  = (Bend/Compile/NetToHvm/net_to_hvm net)
    ask nets = (Bend/Compile/NetToHvm/nets_to_hvm/go nets)
    #Done{#Cons{(Pair.new (String/hash name) net) nets}}
  }

Bend/Parser/is_num_char : Char -> Bool
| c = (Bool/or (Char/is_digit c) (Bool/or (Char/eq c '-') (Char/eq c '+')))

#test: (Bend/Parser/is_num_char '0') == #True
#test: (Bend/Parser/is_num_char '1') == #True
#test: (Bend/Parser/is_num_char '2') == #True
#test: (Bend/Parser/is_num_char '3') == #True
#test: (Bend/Parser/is_num_char '4') == #True
#test: (Bend/Parser/is_num_char '5') == #True
#test: (Bend/Parser/is_num_char '6') == #True
#test: (Bend/Parser/is_num_char '7') == #True
#test: (Bend/Parser/is_num_char '8') == #True
#test: (Bend/Parser/is_num_char '9') == #True
#test: (Bend/Parser/is_num_char '-') == #True
#test: (Bend/Parser/is_num_char '+') == #True
#test: (Bend/Parser/is_num_char '.') == #False
#test: (Bend/Parser/is_num_char '_') == #False
#test: (Bend/Parser/is_num_char 'a') == #False
#test: (Bend/Parser/is_num_char 'A') == #False

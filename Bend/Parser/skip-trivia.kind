// Skips a single-line comment.
Bend/Parser/skip-single-line-comment : (Parser Unit)
= do Parser {
  ask is_comment = (Parser/starts-with "#")
  if is_comment {
    do Parser {
      ask x = (Parser/advance-one)
      ask x = (Parser/take-while (Î»c (Char/neq c '\n')))
      ask x = (Parser/advance-one)
      ret #Unit
    }
  } else {
    (Parser/pure Unit #Unit)
  }
}

// Skips a multi-line comment.
Bend/Parser/skip-multi-line-comment : Nat -> (Parser Unit)
| depth = do Parser {
  ask is_comment = (Parser/starts-with "#{")
  if is_comment {
    do Parser {
      ask y = (Parser/advance-many #2)
      (Bend/Parser/skip-to-comment-end #Succ{depth})
    }
  } else {
    (Parser/pure Unit #Unit)
  }
} 

// Auxiliary function for skip-multi-line-comment.
Bend/Parser/skip-to-comment-end : Nat -> (Parser Unit)
| #Zero    = (Parser/pure Unit #Unit)
| depth    = do Parser {
  ask is-start = (Parser/starts-with "#{")
  ask is-end   = (Parser/starts-with "#}")
  if (is-start) {
    (Bend/Parser/skip-multi-line-comment depth)
  } else if (is-end) {
    do Parser {
      ask w = (Parser/advance-many #2)
      (Bend/Parser/skip-to-comment-end (Nat/pred depth))
    }
  } else {
    do Parser {
      ask w = (Parser/advance-one)
      (Bend/Parser/skip-to-comment-end depth)
    }
  }
}

// Skips all trivia (whitespace and comments).
Bend/Parser/skip-trivia : (Parser Unit)
= do Parser {
  ask c = (Parser/peek-one)
  match c {
    #Some{v}:
      if (Char/is-space v) {
        do Parser {
          ask z = (Parser/advance-one)
          (Bend/Parser/skip-trivia)
        }      
      } else if (Char/eq v '#') {
        do Parser {
          ask _ = (Bend/Parser/skip-multi-line-comment #0)
          ask _ = (Bend/Parser/skip-single-line-comment)
          (Bend/Parser/skip-trivia)
        }
      } else {
        (Parser/pure Unit #Unit)
      }
    #None: (Parser/pure Unit #Unit)
  }
} 

#test: (Bend/Parser/skip-trivia #State{"code" #0}) == #Done{#Reply{#State{"code" #0} #Unit}}
#test: (Bend/Parser/skip-trivia #State{"   code" #0}) == #Done{#Reply{#State{"code" #3} #Unit}}
#test: (Bend/Parser/skip-trivia #State{"   # This is a comment\n  #{This is a\nmulti-line comment#}\n  code" #0}) == #Done{#Reply{#State{"code" #60} #Unit}} 
#test: (Bend/Parser/skip-trivia #State{"#{Nested #{comments#} are #} handled" #0}) == #Done{#Reply{#State{"handled" #29} #Unit}} 
#test: (Bend/Parser/skip-trivia #State{"  # Comment\n  code" #0}) == #Done{#Reply{#State{"code" #14} #Unit}}
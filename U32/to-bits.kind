// Converts a U32 value to its binary representation as Bits.
// - n: The U32 value to convert.
// = The binary representation of the input U32 value as Bits.
U32/to-bits : U32 -> Bits
= Î»n if (U32/to-bool n) {
  let quotient = (U32/div n 2)
  let remainder = (U32/mod n 2)
  if (U32/to-bool (U32/eql remainder 0)) {
    #O{(U32/to-bits quotient)}
  } else {
    #I{(U32/to-bits quotient)}
  }
} else {
  #E
}

#test: (U32/to-bits 5) == #I{#O{#I{#E}}}
#test: (U32/to-bits 8) == #O{#O{#O{#I{#E}}}}

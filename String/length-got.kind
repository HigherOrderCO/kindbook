// Computes the length of a string while preserving the original string.
// - 1st: The input string.
// = A pair containing the original string and its length as a Nat.
String/length-got
: ∀(str: String/String)
  (Pair/Pair String/String Nat/Nat)
= λstr (List/length-got U32 str)

// Test: Empty string has length zero
TEST_0
: (Equal/Equal Nat/Nat (Pair/get-snd String/String (λx Nat/Nat) (String/length-got "")) #0)
= #Refl

// Test: Non-empty string returns correct length
TEST_1
: (Equal/Equal Nat/Nat (Pair/get-snd String/String (λx Nat/Nat) (String/length-got "Hello")) #5)
= #Refl

// Test: Original string is preserved
TEST_2
: (Equal/Equal (String/String) (Pair/get-fst String/String (λx Nat/Nat) (String/length-got "Agda")) "Agda")
= #Refl

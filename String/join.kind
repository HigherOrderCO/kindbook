// Joins a list of strings with a separator.
// - sep: Separator string.
// - xs: List of strings to join.
// = Single string with all inputs concatenated, separated by sep.
String/join : String -> (List String) -> String
| sep xs = (List/foldr String String (String/join/go sep) "" xs)

// Combines a string with the accumulated result
String/join/go : String -> String -> String -> String
| sep s acc = 
  if (String/is-empty acc) {
    s
  } else {
    (String/append s (String/append sep acc))
  }

#test: (String/join "," ["a" "b" "c"]) == "a,b,c"
#test: (String/join "" ["hello" "world"]) == "helloworld"
#test: (String/join " " ["one"]) == "one"
#test: (String/join "-" []) == ""

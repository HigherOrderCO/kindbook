use Char/ as C/
use U32/ as U32/
use Ordering/ as O/

// Compares two characters and returns their ordering.
// 1st: The first character to compare.
// 2nd: The second character to compare.
// = An Ordering value: LT if 1st < 2nd, EQ if 1st = 2nd, GT if 1st > 2nd.
C/compare
: ∀(x: C/Char)
  ∀(y: C/Char)
  O/Ordering
= λx λy (U32/compare x y)
//TEST//

use Char/ as C/
use Ordering/ as O/
use Equal/ as E/

// Test: Compares 'a' with 'a'.
// = EQ
T0 : (E/Equal O/Ordering (C/compare 97 97) #EQ{})
= #Refl{}

// Test: Compares 'a' with 'b'.
// = LT
T1 : (E/Equal O/Ordering (C/compare 97 98) #LT{})
= #Refl{}

// Test: Compares 'b' with 'a'.
// = GT
T2 : (E/Equal O/Ordering (C/compare 98 97) #GT{})
= #Refl{}

// Test: Compares 'A' with 'a'.
// = LT
T3 : (E/Equal O/Ordering (C/compare 65 97) #LT{})
= #Refl{}

// Test: Compares '0' with '9'.
// = LT
T4 : (E/Equal O/Ordering (C/compare 48 57) #LT{})
= #Refl{}

// Test: Compares '!' with '~'.
// = LT
T5 : (E/Equal O/Ordering (C/compare 33 126) #LT{})
= #Refl{}

// Test: Compares 'z' with 'a'.
// = GT
T6 : (E/Equal O/Ordering (C/compare 122 97) #GT{})
= #Refl{}
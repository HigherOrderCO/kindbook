// Checks if a character is a digit (0-9).
// 1st: The character to check.
// = True if the character is a digit, False otherwise.
Char/is-digit
: ∀(c: Char/Char)
  Bool/Bool
= λc
  (Bool/and (U32/gte c 48) (U32/lte c 57))
// Test: '0' is a digit
TEST_0 
: (Equal/Equal Bool/Bool (Char/is-digit '0') #True{}) 
= #Refl{}

// Test: '9' is a digit
TEST_1 
: (Equal/Equal Bool/Bool (Char/is-digit '9') #True{}) 
= #Refl{}

// Test: '5' is a digit
TEST_2 
: (Equal/Equal Bool/Bool (Char/is-digit '5') #True{}) 
= #Refl{}

// Test: 'a' is not a digit
TEST_3 
: (Equal/Equal Bool/Bool (Char/is-digit 'a') #False{}) 
= #Refl{}

// Test: 'A' is not a digit
TEST_4 
: (Equal/Equal Bool/Bool (Char/is-digit 'A') #False{}) 
= #Refl{}

// Test: ' ' (space) is not a digit
// T5 
// : (Equal/Equal Bool/Bool (Char/is-digit ' ') #False{}) 
// = #Refl{}

// Test: '-' is not a digit
TEST_6 
: (Equal/Equal Bool/Bool (Char/is-digit '-') #False{}) 
= #Refl{}

// Test: '/' is not a digit (just before '0' in ASCII)
TEST_7 
: (Equal/Equal Bool/Bool (Char/is-digit '/') #False{}) 
= #Refl{}

// Test: ':' is not a digit (just after '9' in ASCII)
TEST_8 
: (Equal/Equal Bool/Bool (Char/is-digit ':') #False{}) 
= #Refl{}
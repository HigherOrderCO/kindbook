use Char/ as C/
use Bool/ as B/
use U32/ as U32/

// Checks if a character is printable.
// 1st: The character to check.
// = True if the character is printable, False otherwise.
C/is-print
: ∀(code: C/Char)
  B/Bool
= λcode (B/and (U32/gte code 32) (U32/lte code 126))
//TEST//

use Char/ as C/
use Bool/ as B/
use Equal/ as E/

// Test: Lowercase letter 'a' is printable
T0 
: (E/Equal B/Bool (C/is-print 'a') #True{}) 
= #Refl{}

// Test: Uppercase letter 'Z' is printable
T1 
: (E/Equal B/Bool (C/is-print 'Z') #True{}) 
= #Refl{}

// Test: Digit '5' is printable
T2 
: (E/Equal B/Bool (C/is-print '5') #True{}) 
= #Refl{}

// Test: Special character '@' is printable
T3 
: (E/Equal B/Bool (C/is-print '@') #True{}) 
= #Refl{}

// // Test: Space character is printable
// T4 
// : (E/Equal B/Bool (C/is-print ' ') #True{}) 
// = #Refl{}

// Test: Newline character is not printable
T5 
: (E/Equal B/Bool (C/is-print '\n') #False{}) 
= #Refl{}

// // Test: Null character is not printable
// T6 
// : (E/Equal B/Bool (C/is-print '\0') #False{}) 
// = #Refl{}

// Test: Tab character is not printable
T7 
: (E/Equal B/Bool (C/is-print '\t') #False{}) 
= #Refl{}
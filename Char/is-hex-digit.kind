// Checks if a character is a hexadecimal digit (0-9, A-F, a-f).
// 1st: The character to check.
// = True if the character is a hexadecimal digit, False otherwise.
Char/is-hex-digit
: ∀(code: Char)
  Bool
= λcode
  let is_0_9 = (& (>= code 48) (<= code 57))
  let is_A_F = (& (>= code 65) (<= code 70))
  let is_a_f = (& (>= code 97) (<= code 102))
  (U32/to-bool (| is_0_9 (| is_A_F is_a_f)))

// Test: Digit '5' is a hexadecimal digit
TEST_0 
: (Equal Bool (Char/is-hex-digit '5') #True{}) 
= #Refl{}

// Test: Uppercase 'A' is a hexadecimal digit
TEST_1 
: (Equal Bool (Char/is-hex-digit 'A') #True{}) 
= #Refl{}

// Test: Lowercase 'f' is a hexadecimal digit
TEST_2 
: (Equal Bool (Char/is-hex-digit 'f') #True{}) 
= #Refl{}

// Test: Letter 'G' is not a hexadecimal digit
TEST_3 
: (Equal Bool (Char/is-hex-digit 'G') #False{}) 
= #Refl{}

// Test: Special character '@' is not a hexadecimal digit
TEST_4 
: (Equal Bool (Char/is-hex-digit '@') #False{}) 
= #Refl{}
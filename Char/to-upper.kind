// Converts a character to its uppercase equivalent.
// 1st: The character to convert.
// = The uppercase version of the input character.
Char/to-upper
: ∀(code: Char/Char)
  Char/Char
= λcode
  let is_lower = (Char/is-lower code)
  (Bool/if Char/Char
		is_lower
		(- code 32) 
		(code))
// Test: Lowercase 'a' is converted to uppercase 'A'
TEST_0 
: (Equal/Equal Char/Char (Char/to-upper 'a') 'A')
= #Refl{}

// Test: Uppercase 'A' remains unchanged
TEST_1 
: (Equal/Equal Char/Char (Char/to-upper 'A') 'A')
= #Refl{}

// Test: Digit '5' remains unchanged
TEST_2 
: (Equal/Equal Char/Char (Char/to-upper '5') '5')
= #Refl{}

// Test: Special character '@' remains unchanged
TEST_3 
: (Equal/Equal Char/Char (Char/to-upper '@') '@')
= #Refl{}

// // Test: Space character remains unchanged
// T4 
// : (Equal/Equal Char/Char (Char/to-upper ' ') ' ')
// = #Refl{}

// // Test: Newline character remains unchanged
// T5 
// : (Equal/Equal Char/Char (Char/to-upper '\n') '\n')
// = #Refl{}

// Test: Lowercase 'z' is converted to uppercase 'Z'
TEST_6 
: (Equal/Equal Char/Char (Char/to-upper 'z') 'Z')
= #Refl{}
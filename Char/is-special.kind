// Checks if a character is a special character (printable but not alphanumeric).
// - 1st: The character to check.
// = True if the character is a special character, False otherwise.
Char/is-special
: ∀(code: Char)
  Bool
= λcode
  let is_print = (Char/is-print code)
  let is_alpha = (Char/is-alpha code)
  let is_digit = (Char/is-digit code)
  let is_alphanumeric = (Bool/or is_alpha is_digit)
  (Bool/and is_print (Bool/not is_alphanumeric))
// Test: Special character (e.g., '@') should return True
TEST_0 
: (Equal Bool (Char/is-special 64) #True{}) 
= #Refl{}

// Test: Alphabetic character should return False
TEST_1 
: (Equal Bool (Char/is-special 65) #False{}) 
= #Refl{}

// Test: Digit should return False
TEST_2 
: (Equal Bool (Char/is-special 53) #False{}) 
= #Refl{}

// Test: Non-printable character should return False
TEST_3 
: (Equal Bool (Char/is-special 0) #False{}) 
= #Refl{}

// Test: Another special character (e.g., '#') should return True
TEST_4 
: (Equal Bool (Char/is-special 35) #True{}) 
= #Refl{}
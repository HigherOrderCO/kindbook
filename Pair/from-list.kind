// Converts a list of two elements to a pair.
// - A: Input type.
// - xs: Input list.
// - def: Default value.
// = A pair of elements.
Pair/from-list : âˆ€(A: *) A -> (List A) -> (Pair A A)
| A def #Nil                     = #Pair{fst: def snd: def}
| A def #Cons{a0 #Nil}           = #Pair{fst: a0 snd: def}
| A def #Cons{a0 #Cons{a1 tail}} = #Pair{fst: a0 snd: a1}

#test: (Pair/from-list U64 0 [1 2 3]) == #Pair{fst: 1 snd: 2}
#test: (Pair/from-list U64 0 [1 2]) == #Pair{fst: 1 snd: 2}
#test: (Pair/from-list U64 0 [1]) == #Pair{fst: 1 snd: 0}
#test: (Pair/from-list U64 0 []) == #Pair{fst: 0 snd: 0}

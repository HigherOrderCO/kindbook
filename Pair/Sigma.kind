// Dependent pair type (Sigma type)
Pair/Sigma
: ∀(A: *)
  ∀(B: ∀(a: A) *)
  *
= λA λB data[]{
  #Pair{ fst:A snd:(B fst) } : (Pair/Sigma A B)
}

// Accessor for the fst field
Pair/Sigma/fst
: ∀(A: *)
  ∀(B: ∀(a: A) *)
  ∀(pair: (Pair/Sigma A B))
  A
= λA λB λ{
  #Pair: λpair.fst λpair.snd pair.fst
}

// Accessor for the snd field
Pair/Sigma/snd
: ∀(A: *)
  ∀(B: ∀(a: A) *)
  ∀(pair: (Pair/Sigma A B))
  (B (Pair/Sigma/fst A B pair))
= λA λB λ{
  #Pair: λpair.fst λpair.snd pair.snd
}
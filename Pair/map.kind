// Maps a function to both elements of a pair.
// - A: The input type.
// - B: The output type.
// - f: The function to apply to both elements.
// - p: The input pair.
// = A new pair with the function applied to both elements.
Pair/map : ∀(A: *) ∀(B: *) (A -> B) -> (Pair A A) -> (Pair B B)
| A B f #Pair{fst snd} = #Pair{(f fst) (f snd)}

#test: (Pair/map U64 U64 (λx (+ x 1)) #Pair{1 2}) == #Pair{2 3}
#test: (Pair/map Bool Bool Bool/not #Pair{#True #False}) == #Pair{#False #True}

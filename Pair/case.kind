// Matches a pair and applies a function to its components.
// - A: The type of the first component.
// - B: The type family for the second component.
// - C: The return type.
// - p: The pair to match.
// - f: The function to apply to the pair's components.
// = The result of applying f to the pair's components.
Pair/case
: ∀(A: *)
  ∀(B: *)
  ∀(p: (Pair/Pair A B))
  ∀(P: ∀(x: (Pair/Pair A B)) *)
  ∀(f: ∀(fst: A) ∀(snd: B) (P #Pair { fst snd }))
  (P p)
= λA λB λp λP λf
  (Pair/match A B P f p)

// Creates a singleton AVL tree.
// - K: Key type.
// - V: Value type.
// - p: Key-value pair.
// = AVL tree with one element.
OrdTree/singleton : ∀(K: *) ∀(V: *) (Pair K V) -> (OrdTree K V)
| K V p = #Node{
  key-value: p
  balance: #Zero
  left: #Leaf
  right: #Leaf
}

#test: (OrdTree/singleton U64 U64 #Pair{1 2}) == #Node{#Pair{1 2} #Zero #Leaf #Leaf}
#test: (OrdTree/singleton Bool String #Pair{#True "hello"}) == #Node{#Pair{#True "hello"} #Zero #Leaf #Leaf}
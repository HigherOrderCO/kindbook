// Deletes the maximum key-value pair from an AVL tree.
// - K: Key type.
// - V: Value type.
// - tree: The input AVL tree.
// = A pair containing the deleted key-value pair (if any) and the updated tree with a height change indicator.
OrdTree/Delete/delete-maximum : ∀(K: *) ∀(V: *) (OrdTree K V) -> (Pair (Maybe (Pair K V)) (Pair (OrdTree K V) Bool))
| K V #Leaf = #Pair{#None #Pair{#Leaf #False}}
| K V #Node{v #Zero l #Leaf} = #Pair{#Some{v} #Pair{l #True}}
| K V #Node{v #PlusOne l #Leaf} = #Pair{#Some{v} #Pair{l #True}}
| K V #Node{v #MinusOne l #Leaf} = #Pair{#Some{v} #Pair{l #True}}
| K V #Node{pair balance l r} with (OrdTree/Delete/delete-maximum K V r)
. | #Pair{v #Pair{other is-smaller}} with is-smaller
. . | #True with (balance :: (OrdTree/Balance))
. . . | #PlusOne  = 
        #Pair{v #Pair{(#Node{pair #Zero l other} :: (OrdTree K V)) #True}}
. . . | #Zero     = 
        #Pair{v #Pair{(#Node{pair #MinusOne l other} :: (OrdTree K V)) #False}}
. . . | #MinusOne = 
        #Pair{v (OrdTree/Balance/rotate-right K V (#Node{curr #MinusOne l other} :: (OrdTree K V)))}
. . | #False = 
      #Pair{v #Pair{(#Node{pair balance l other} :: (OrdTree K V)) #False}} 

#test: (OrdTree/Delete/delete-maximum U64 U64 (OrdTree/empty U64 U64)) == #Pair{#None #Pair{#Leaf #False}}
#test: (OrdTree/Delete/delete-maximum U64 U64 #Node{#Pair{3 30} #Zero #Leaf #Leaf}) == #Pair{#Some{#Pair{3 30}} #Pair{#Leaf #True}}

// Retrieves a value from an OrdTree tree.
// - K: Key type.
// - V: Value type.
// - ord: Ord instance for K.
// - tree: The Ordtree tree.
// - key: Key to search for.
// = Maybe containing the value if found.
OrdTree/get : ∀(K: *) ∀(V: *) ∀(ord: (Ord K)) (OrdTree K V) -> K -> (Maybe V)
| K V ord #Leaf                                        key = #None
| K V ord #Node{#Pair{curr_key curr_val} _ left right} key with (Ord/compare K ord curr_key key)
. | #LT = (OrdTree/get K V ord left key)
. | #EQ = #Some{curr_val}
. | #GT = (OrdTree/get K V ord right key)

#test:
  let ordtree = (OrdTree/empty U64 String)
  (OrdTree/get U64 String U64/Ord ordtree 1) == #None

#test:
  let ordtree = (OrdTree/singleton U64 String #Pair{1 "one"})
  (OrdTree/get U64 String U64/Ord ordtree 1) == #Some{"one"}

#test:
  let ordtree = (OrdTree/singleton U64 String #Pair{1 "one"})
  (OrdTree/get U64 String U64/Ord ordtree 2) == #None
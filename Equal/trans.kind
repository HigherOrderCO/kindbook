// Transitivity property of equality.
// - A: The type of the values being compared.
// - x: The first value.
// - y: The second value.
// - z: The third value.
// - xy: Proof that x is equal to y.
// - yz: Proof that y is equal to z.
// = Proof that x is equal to z.
Equal/trans : ∀(A: *) ∀(x: A) ∀(y: A) ∀(z: A) (Equal A x y) -> (Equal A y z) -> (Equal A x z)
| A x y z #Refl #Refl = #Refl

#test: (Equal/trans Nat #0 #0 #0 #Refl #Refl) == #Refl
#test: (Equal/trans Bool #True #True #True #Refl #Refl) == #Refl

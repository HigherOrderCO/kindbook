// Filters an OrdSet based on a predicate.
// - K: Element type.
// - ord: Ord instance for K.
// - pred: Predicate function.
// - set: Input OrdSet.
// = Filtered OrdSet.
OrdSet/filter : ∀(K: *) ∀(ord: (Ord K)) (OrdSet K) -> (K -> Bool) -> (OrdSet K)
| K ord set pred =
  use f = λkv λacc
    if (pred kv) {
      (OrdSet/insert K ord acc kv)
    } else {
      acc
    }
  (OrdSet/fold K set (OrdSet K) (OrdSet/empty K) f)

#test: (OrdSet/filter U64 U64/Ord (OrdSet/from_list U64 U64/Ord [1 2 3]) (λx (U64/to_bool (== x 2)))) == (OrdSet/from_list U64 U64/Ord [2])
#test: (OrdSet/filter U64 U64/Ord (OrdSet/from_list U64 U64/Ord [1 2 3]) (λx (U64/to_bool (> x 1)))) == (OrdSet/from_list U64 U64/Ord [3 2])
#test: (OrdSet/filter U64 U64/Ord (OrdSet/from_list U64 U64/Ord [1 2 3]) (λx (U64/to_bool (== x 0)))) == (OrdSet/empty U64)
#test: (OrdSet/filter U64 U64/Ord (OrdSet/from_list U64 U64/Ord [1 2 3]) (λx #True)) == (OrdSet/from_list U64 U64/Ord [1 2 3])
// Creates a set from a list.
// - K: Element type.
// - ord: Ord instance for K.
// - xs: Input list.
// = Resulting set.
OrdSet/from_list : ∀(K: *) ∀(ord: (Ord K)) (List K) -> (OrdSet K)
| K ord xs = (OrdTree/from_list K Unit ord (List/map K (Pair K Unit) xs (λx #Pair{x #Unit})))

#test: (OrdSet/to_list U64 (OrdSet/from_list U64 U64/Ord [1 2 3])) == [1 2 3]
#test: (OrdSet/to_list U64 (OrdSet/from_list U64 U64/Ord [3 2 1 2 3])) == [1 2 3]
#test: (OrdSet/to_list U64 (OrdSet/from_list U64 U64/Ord [])) == []
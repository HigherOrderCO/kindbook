// Maps elements of a set to a new set.
// - V: Input type.
// - A: Output type.
// - ord: Ord instance for A.
// - set: Input set.
// - f: Mapping function.
// = Resulting set.
OrdSet/map : ∀(V: *) ∀(A: *) ∀(ord: (Ord A)) (OrdSet V) -> (V -> A) -> (OrdSet A)
| V A ord set f = (OrdTree/map_keys V Unit A ord set f)

#test: (OrdSet/to_list U64 (OrdSet/map U64 U64 U64/Ord (OrdSet/from_list U64 U64/Ord [1 2 3]) (λx (+ x 1)))) == [2 3 4]
#test: (OrdSet/to_list U64 (OrdSet/map U64 U64 U64/Ord (OrdSet/from_list U64 U64/Ord [1 2 3]) (λx (* x 2)))) == [2 4 6]
#test: (OrdSet/to_list U64 (OrdSet/map U64 U64 U64/Ord (OrdSet/empty U64) (λx x))) == []
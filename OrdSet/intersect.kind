// Computes the intersection of two OrdSets.
// - K: Element type.
// - ord: Ord instance for K.
// - s1: First OrdSet.
// - s2: Second OrdSet.
// = New OrdSet with elements present in both sets.
OrdSet/intersect : âˆ€(K: *) (Ord K) -> (OrdSet K) -> (OrdSet K) -> (OrdSet K)
| K ord s1 s2 = (OrdTree/intersect K Unit ord s1 s2)

#test: (OrdSet/intersect U64 U64/Ord (OrdSet/from-list U64 U64/Ord [1 2 3]) (OrdSet/empty U64)) == (OrdSet/empty U64)
#test: (OrdSet/intersect U64 U64/Ord (OrdSet/from-list U64 U64/Ord [1 2 3]) (OrdSet/from-list U64 U64/Ord [2 3 4])) == (OrdSet/from-list U64 U64/Ord [3 2])
#test: (OrdSet/intersect U64 U64/Ord (OrdSet/from-list U64 U64/Ord [1 2 3]) (OrdSet/from-list U64 U64/Ord [1 2 3])) == (OrdSet/from-list U64 U64/Ord [1 2 3])
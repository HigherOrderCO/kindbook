// Checks if an element is in the set.
// - K: Element type.
// - ord: Ord instance for K.
// - set: The set to check in.
// - key: Element to check.
// = True if the element is in the set, False otherwise.
OrdSet/contains : ∀(K: *) ∀(ord: (Ord K)) (OrdSet K) -> K -> Bool
| K ord set key = (OrdTree/has_key K Unit ord set key)

#test:
  let ordset = (OrdSet/empty Nat)
  (OrdSet/contains Nat Nat/Ord ordset #3) == #False

#test:
  let ordset = (OrdSet/empty Nat)
  let ordset = (OrdSet/insert Nat Nat/Ord ordset #3)
  (OrdSet/contains Nat Nat/Ord ordset #3) == #True

#test:
  let ordset = (OrdSet/empty Nat)
  let ordset = (OrdSet/insert Nat Nat/Ord ordset #3)
  (OrdSet/contains Nat Nat/Ord ordset #5) == #False

// Calculates the sum of all values in a tree of natural numbers.
// - t: The tree to sum.
// = The sum of all values in the tree.
BinTree/sum : (BinTree Nat) -> Nat
| #Leaf              = #Zero
| #Node{val lft rgt} = (Nat/add val (Nat/add (BinTree/sum lft) (BinTree/sum rgt)))

#test: (BinTree/sum #Leaf) == #Zero
#test: (BinTree/sum (#Node{#5 #Leaf #Leaf})) == #5
#test: (BinTree/sum (#Node{#1 (#Node{#2 #Leaf #Leaf}) (#Node{#3 #Leaf #Leaf})})) == #6
#test: (BinTree/sum (#Node{#1 (#Node{#2 (#Node{#3 #Leaf #Leaf}) #Leaf}) #Leaf})) == #6
#test: (BinTree/sum (#Node{#10 (#Node{#5 (#Node{#2 #Leaf #Leaf}) (#Node{#3 #Leaf #Leaf})}) (#Node{#15 (#Node{#12 #Leaf #Leaf}) (#Node{#18 #Leaf #Leaf})})})) == #65
#test: (BinTree/sum (#Node{#Zero (#Node{#1 #Leaf #Leaf}) (#Node{#2 #Leaf #Leaf})})) == #3
#test: (BinTree/sum (#Node{#1 (#Node{#1 (#Node{#1 #Leaf #Leaf}) (#Node{#1 #Leaf #Leaf})}) (#Node{#1 (#Node{#1 #Leaf #Leaf}) (#Node{#1 #Leaf #Leaf})})})) == #7

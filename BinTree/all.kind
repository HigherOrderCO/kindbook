// Checks if all elements in a binary tree satisfy a condition.
// - A: Element type.
// - cond: Condition function.
// - tree: Input tree.
// = True if all elements satisfy the condition, False otherwise.
BinTree/all : ∀(A: *) (A -> Bool) -> (BinTree A) -> Bool
= λA λcond λtree
  (BinTree/fold A Bool
    λval λlft λrgt (Bool/and (cond val) (Bool/and lft rgt))
    #True
    tree)

#test: (BinTree/all U64 (λx (U64/to-bool (== x 1))) #Leaf) == #True
#test: (BinTree/all U64 (λx (U64/to-bool (== x 1))) #Node{1 #Leaf #Leaf}) == #True
#test: (BinTree/all U64 (λx (U64/to-bool (== x 1))) #Node{2 #Leaf #Leaf}) == #False
#test: (BinTree/all U64 (λx (U64/to-bool (> x 0))) #Node{1 #Node{2 #Leaf #Leaf} #Node{3 #Leaf #Leaf}}) == #True
#test: (BinTree/all U64 (λx (U64/to-bool (> x 1))) #Node{1 #Node{2 #Leaf #Leaf} #Node{3 #Leaf #Leaf}}) == #False
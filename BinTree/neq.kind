use BinTree/ as BT/
use Bool/ as B/
use Trait/ as T/

// Checks if two binary trees are not equal.
// - 1st: The type of elements in the tree.
// - 2nd: An equality function for type A.
// - 3rd: The first tree to compare.
// - 4th: The second tree to compare.
// = True if the trees are not equal, False otherwise.
BT/neq
: ∀(A: *)
  ∀(e: (T/Eq A))
  ∀(a: (BT/BinTree A))
  ∀(b: (BT/BinTree A))
  B/Bool
= λA λe λa λb (B/not (BT/eq A e a b))

//TEST//

use BinTree/ as BT/
use Bool/ as B/
use Equal/ as E/
use Nat/Trait/ as NT/

// Test: Inequality of two different simple trees
T0 
: (E/Equal B/Bool (BT/neq N/Nat NT/Eq (#Node{#Succ{#Zero{}} #Leaf{} #Leaf{}}) (#Node{#Succ{#Succ{#Zero{}}} #Leaf{} #Leaf{}})) #True{})
= #Refl{}

// Test: Inequality of two identical complex trees
T1 
: (E/Equal B/Bool (BT/neq N/Nat NT/Eq (#Node{#Succ{#Zero{}} (#Node{#Succ{#Succ{#Zero{}}} #Leaf{} #Leaf{}}) #Leaf{}}) (#Node{#Succ{#Zero{}} (#Node{#Succ{#Succ{#Zero{}}} #Leaf{} #Leaf{}}) #Leaf{}})) #False{})
= #Refl{}

// Test: Inequality of trees with same root but different structure
T2 
: (E/Equal B/Bool (BT/neq N/Nat NT/Eq (#Node{#Succ{#Zero{}} (#Node{#Succ{#Succ{#Zero{}}} #Leaf{} #Leaf{}}) #Leaf{}}) (#Node{#Succ{#Zero{}} #Leaf{} (#Node{#Succ{#Succ{#Zero{}}} #Leaf{} #Leaf{}})})) #True{})
= #Refl{}

// Test: Inequality between a leaf and a non-leaf tree
T3 
: (E/Equal B/Bool (BT/neq N/Nat NT/Eq #Leaf{} (#Node{#Succ{#Zero{}} #Leaf{} #Leaf{}})) #True{})
= #Refl{}

// Test: Inequality of two empty trees (leaves)
T4 
: (E/Equal B/Bool (BT/neq N/Nat NT/Eq #Leaf{} #Leaf{}) #False{})
= #Refl{}

// Test: Inequality of trees with different values in subtrees
T5 
: (E/Equal B/Bool (BT/neq N/Nat NT/Eq (#Node{#Succ{#Zero{}} (#Node{#Succ{#Succ{#Zero{}}} #Leaf{} #Leaf{}}) (#Node{#Succ{#Succ{#Succ{#Zero{}}}} #Leaf{} #Leaf{}})}) (#Node{#Succ{#Zero{}} (#Node{#Succ{#Succ{#Zero{}}} #Leaf{} #Leaf{}}) (#Node{#Succ{#Succ{#Succ{#Succ{#Zero{}}}}} #Leaf{} #Leaf{}})})) #True{})
= #Refl{}

// Test: Inequality of trees with same structure but different root values
T6 
: (E/Equal B/Bool (BT/neq N/Nat NT/Eq (#Node{#Succ{#Zero{}} (#Node{#Succ{#Succ{#Zero{}}} #Leaf{} #Leaf{}}) (#Node{#Succ{#Succ{#Succ{#Zero{}}}} #Leaf{} #Leaf{}})}) (#Node{#Succ{#Succ{#Succ{#Succ{#Zero{}}}}} (#Node{#Succ{#Succ{#Zero{}}} #Leaf{} #Leaf{}}) (#Node{#Succ{#Succ{#Succ{#Zero{}}}} #Leaf{} #Leaf{}})})) #True{})
= #Refl{}

// Test: Inequality of a complex tree and a leaf
T7 
: (E/Equal B/Bool (BT/neq N/Nat NT/Eq (#Node{#Succ{#Zero{}} (#Node{#Succ{#Succ{#Zero{}}} #Leaf{} #Leaf{}}) (#Node{#Succ{#Succ{#Succ{#Zero{}}}} #Leaf{} #Leaf{}})}) #Leaf{}) #True{})
= #Refl{}

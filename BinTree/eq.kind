// Checks if two binary trees are equal.
// - 1st: The type of elements in the tree.
// - 2nd: An equality function for type.
// - 3rd: The first tree to compare.
// - 4th: The second tree to compare.
// = True if the trees are equal, False otherwise.
BinTree/eq
: ∀(A: *)
  ∀(e: (Trait/Eq A))
  ∀(a: (BinTree/BinTree A))
  ∀(b: (BinTree/BinTree A))
  Bool
= λA λe λ{
  #Leaf: λ{
    #Leaf: #True
    #Node: λb.val λb.lft λb.rgt #False
  }
  #Node: λa.val λa.lft λa.rgt λ{
    #Leaf: #False
    #Node: λb.val λb.lft λb.rgt
      let eq_val = (Trait/Eq/eq A e a.val b.val)
      let eq_lft = (BinTree/eq A e a.lft b.lft)
      let eq_rgt = (BinTree/eq A e a.rgt b.rgt)
      (Bool/and eq_val (Bool/and eq_lft eq_rgt))
  }
}

// Test equality of two identical simple trees.
TEST_0
: (Equal
    Bool
    (BinTree/eq Nat NT/Eq
      (#Node{#Succ{#Zero} #Leaf #Leaf})
      (#Node{#Succ{#Zero} #Leaf #Leaf}))
    #True)
= #Refl

// Test equality of two identical complex trees.
TEST_1
: (Equal
    Bool
    (BinTree/eq Nat NT/Eq
      (#Node{
        #Succ{#Zero}
        (#Node{#Succ{#Succ{#Zero}} #Leaf #Leaf})
        #Leaf})
      (#Node{
        #Succ{#Zero}
        (#Node{#Succ{#Succ{#Zero}} #Leaf #Leaf})
        #Leaf}))
    #True)
= #Refl

// Test inequality of trees with different root values.
TEST_2
: (Equal
    Bool
    (BinTree/eq Nat NT/Eq
      (#Node{#Succ{#Zero} #Leaf #Leaf})
      (#Node{#Succ{#Succ{#Zero}} #Leaf #Leaf}))
    #False)
= #Refl

// Test inequality between a leaf and a non-leaf tree.
TEST_3
: (Equal
    Bool
    (BinTree/eq Nat NT/Eq
      #Leaf
      (#Node{#Succ{#Zero} #Leaf #Leaf}))
    #False)
= #Refl

// Test equality of two empty trees (leaves).
TEST_4
: (Equal
    Bool
    (BinTree/eq Nat NT/Eq
      #Leaf
      #Leaf)
    #True)
= #Refl

// Test inequality of trees with same root but different structure.
TEST_5
: (Equal
    Bool
    (BinTree/eq Nat NT/Eq
      (#Node{
        #Succ{#Zero}
        (#Node{#Succ{#Succ{#Zero}} #Leaf #Leaf})
        #Leaf})
      (#Node{
        #Succ{#Zero}
        #Leaf
        (#Node{#Succ{#Succ{#Zero}} #Leaf #Leaf})}))
    #False)
= #Refl

// Test equality of trees with nested structures.
TEST_6
: (Equal
    Bool
    (BinTree/eq Nat NT/Eq
      (#Node{
        #Succ{#Succ{#Succ{#Zero}}}
        (#Node{
          #Succ{#Succ{#Zero}}
          (#Node{#Succ{#Zero} #Leaf #Leaf})
          #Leaf})
        (#Node{#Succ{#Succ{#Succ{#Succ{#Zero}}}} #Leaf #Leaf})})
      (#Node{
        #Succ{#Succ{#Succ{#Zero}}}
        (#Node{
          #Succ{#Succ{#Zero}}
          (#Node{#Succ{#Zero} #Leaf #Leaf})
          #Leaf})
        (#Node{#Succ{#Succ{#Succ{#Succ{#Zero}}}} #Leaf #Leaf})}))
    #True)
= #Refl

// Test inequality of trees with different values in deep structures.
TEST_7
: (Equal
    Bool
    (BinTree/eq Nat NT/Eq
      (#Node{
        #Succ{#Succ{#Succ{#Zero}}}
        (#Node{
          #Succ{#Succ{#Zero}}
          (#Node{#Succ{#Zero} #Leaf #Leaf})
          #Leaf})
        (#Node{#Succ{#Succ{#Succ{#Succ{#Zero}}}} #Leaf #Leaf})})
      (#Node{
        #Succ{#Succ{#Succ{#Zero}}}
        (#Node{
          #Succ{#Succ{#Zero}}
          (#Node{#Succ{#Zero} #Leaf #Leaf})
          #Leaf})
        (#Node{#Succ{#Succ{#Succ{#Succ{#Succ{#Zero}}}}} #Leaf #Leaf})}))
    #False)
= #Refl

// Test equality of trees with multiple levels and identical structure
TEST_8
: (Equal
    Bool
    (BinTree/eq Nat NT/Eq
      (#Node{
        #Succ{#Zero}
        (#Node{
          #Succ{#Succ{#Zero}}
          (#Node{#Succ{#Succ{#Succ{#Zero}}} #Leaf #Leaf})
          (#Node{#Succ{#Succ{#Succ{#Succ{#Zero}}}} #Leaf #Leaf})})
        (#Node{
          #Succ{#Succ{#Succ{#Succ{#Succ{#Zero}}}}}
          (#Node{#Succ{#Succ{#Succ{#Succ{#Succ{#Succ{#Zero}}}}}} #Leaf #Leaf})
          #Leaf})})
      (#Node{
        #Succ{#Zero}
        (#Node{
          #Succ{#Succ{#Zero}}
          (#Node{#Succ{#Succ{#Succ{#Zero}}} #Leaf #Leaf})
          (#Node{#Succ{#Succ{#Succ{#Succ{#Zero}}}} #Leaf #Leaf})})
        (#Node{
          #Succ{#Succ{#Succ{#Succ{#Succ{#Zero}}}}}
          (#Node{#Succ{#Succ{#Succ{#Succ{#Succ{#Succ{#Zero}}}}}} #Leaf #Leaf})
          #Leaf})}))
    #True)
= #Refl

// Test inequality of trees with same structure but different leaf values
TEST_9
: (Equal
    Bool
    (BinTree/eq Nat NT/Eq
      (#Node{
        #Succ{#Zero}
        (#Node{#Succ{#Succ{#Zero}} #Leaf #Leaf})
        (#Node{#Succ{#Succ{#Succ{#Zero}}} #Leaf #Leaf})})
      (#Node{
        #Succ{#Zero}
        (#Node{#Succ{#Succ{#Zero}} #Leaf #Leaf})
        (#Node{
          #Succ{#Succ{#Succ{#Zero}}}
          #Leaf
          (#Node{#Succ{#Succ{#Succ{#Succ{#Zero}}}} #Leaf #Leaf})})}))
    #False)
= #Refl
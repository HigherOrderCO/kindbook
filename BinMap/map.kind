// Applies a function to each value in the BinMap.
// - A: Input type.
// - B: Output type.
// - bm: Input BinMap.
// - f: Function to apply to each value.
// = New BinMap with function applied to all values.
BinMap/map : ∀(A: *) ∀(B: *) (BinMap A) -> (A -> B) -> (BinMap B)
| A B bm f = (BinTree/map (Maybe A) (Maybe B) bm (λval (Maybe/map A B val f)))

#test: (BinMap/map U64 U64 #Leaf (λx (+ x 1))) == #Leaf
#test: (BinMap/map U64 U64 (BinMap/insert U64 #Pair{#E 3} #Leaf) (λx (* x 2))) == (BinMap/insert U64 #Pair{#E 6} #Leaf)
#test: (BinMap/to_list U64 (BinMap/map U64 U64 (BinMap/insert U64 #Pair{#O{#E} 5} (BinMap/insert U64 #Pair{#E 3} #Leaf)) (λx (+ x 10)))) == [#Pair{#E 13} #Pair{#O{#E} 15}]
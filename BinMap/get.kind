// Retrieves a value from the BinMap given a key.
// - A: Value type.
// - m: BinMap to search in.
// - k: Bits key to look up.
// = Value associated with the key, wrapped in Maybe.
BinMap/get : âˆ€(A: *) (BinMap A) -> Bits -> (Maybe A)
| A #Leaf        k     = #None
| A #Node{x l r} #E    = x
| A #Node{x l r} #O{b} = (BinMap/get A l b)
| A #Node{x l r} #I{b} = (BinMap/get A r b)

#test: (BinMap/get U64 (BinMap/empty U64) #E) == #None
#test: (BinMap/get U64 (BinMap/set U64 (BinMap/empty U64) #E 42) #E) == #Some{42}
#test: (BinMap/get U64 (BinMap/set U64 (BinMap/empty U64) #O{#E} 42) #O{#E}) == #Some{42}
#test: (BinMap/get U64 (BinMap/set U64 (BinMap/empty U64) #I{#E} 42) #I{#E}) == #Some{42}
#test: (BinMap/get U64 (BinMap/set U64 (BinMap/empty U64) #O{#E} 42) #I{#E}) == #None

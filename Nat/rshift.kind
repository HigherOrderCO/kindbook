// Performs right shift operation on a nat.
// - n: The input nat.
// - shift: The number of positions to shift right.
// = The right-shifted result as a new nat.
Nat/rshift : Nat -> Nat -> Nat
| n shift = (Nat/div n (Nat/exp #2 shift))

#test: (Nat/rshift #0 #1) == #0
#test: (Nat/rshift #1 #1) == #0
#test: (Nat/rshift #2 #1) == #1
#test: (Nat/rshift #4 #1) == #2
#test: (Nat/rshift #8 #2) == #2
#test: (Nat/rshift (Nat/exp #2 #4) #3) == #2
#test: (Nat/rshift (Nat/exp (Nat/mul #5 #2) #2) #2) == (Nat/exp #5 #2)
#test: (Nat/rshift (Nat/exp (Nat/mul #5 #2) #3) #3) == (Nat/exp #5 #3)

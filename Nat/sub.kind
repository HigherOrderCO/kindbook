// Subtracts one nat from another.
// - m: The nat to subtract from.
// - n: The nat to subtract.
// = The result of m - n, or zero if n > m.
Nat/sub : Nat -> Nat -> Nat
| #Zero    n        = #Zero
| #Succ{m} #Zero    = #Succ{m}
| #Succ{m} #Succ{n} = (Nat/sub m n)

#test: (Nat/sub #0 #0) == #0
#test: (Nat/sub #5 #0) == #5
#test: (Nat/sub #0 #5) == #0
#test: (Nat/sub #5 #2) == #3
#test: (Nat/sub #10 #7) == #3
#test: (Nat/sub #8 #8) == #0
#test: (Nat/sub #3 #5) == #0
#test: (Nat/sub (Nat/sub #10 #3) #2) == (Nat/sub #10 (Nat/add #3 #2))

use Nat/ as N/

// Subtracts one natural number from another.
// 1st: The number to subtract from.
// 2nd: The number to subtract.
// = The result of 1st - 2nd, or zero if 2nd > 1st.
N/sub
: ∀(m: N/Nat)
  ∀(n: N/Nat)
  N/Nat
= λ{
  #Zero: λn #Zero{}
  #Succ: λm.pred λ{
    #Zero: #Succ{m.pred}
    #Succ: λn.pred (N/sub m.pred n.pred)
  }
}
//TEST//

use Nat/ as N/
use Bool/ as B/
use Equal/ as E/

// Tests the subtraction operation for natural numbers.

// Test: 0 - 0 = 0.
T0
: (E/Equal N/Nat (N/sub #Zero{} #Zero{}) #Zero{})
= #Refl{}

// Test: 5 - 0 = 5.
T1
: (E/Equal N/Nat (N/sub #Succ{#Succ{#Succ{#Succ{#Succ{#Zero{}}}}}} #Zero{}) #Succ{#Succ{#Succ{#Succ{#Succ{#Zero{}}}}}})
= #Refl{}

// Test: 0 - 5 = 0 (subtraction doesn't go below zero).
T2
: (E/Equal N/Nat (N/sub #Zero{} #Succ{#Succ{#Succ{#Succ{#Succ{#Zero{}}}}}}) #Zero{})
= #Refl{}

// Test: 5 - 2 = 3.
T3
: (E/Equal N/Nat (N/sub #Succ{#Succ{#Succ{#Succ{#Succ{#Zero{}}}}}} #Succ{#Succ{#Zero{}}}) #Succ{#Succ{#Succ{#Zero{}}}})
= #Refl{}

// Test: 10 - 7 = 3.
T4
: (E/Equal N/Nat (N/sub #Succ{#Succ{#Succ{#Succ{#Succ{#Succ{#Succ{#Succ{#Succ{#Succ{#Zero{}}}}}}}}}}} #Succ{#Succ{#Succ{#Succ{#Succ{#Succ{#Succ{#Zero{}}}}}}}} ) #Succ{#Succ{#Succ{#Zero{}}}})
= #Refl{}

// Test: 8 - 8 = 0.
T5
: (E/Equal N/Nat (N/sub #Succ{#Succ{#Succ{#Succ{#Succ{#Succ{#Succ{#Succ{#Zero{}}}}}}}}} #Succ{#Succ{#Succ{#Succ{#Succ{#Succ{#Succ{#Succ{#Zero{}}}}}}}}}) #Zero{})
= #Refl{}

// Test: 3 - 5 = 0 (subtraction doesn't go below zero).
T6
: (E/Equal N/Nat (N/sub #Succ{#Succ{#Succ{#Zero{}}}} #Succ{#Succ{#Succ{#Succ{#Succ{#Zero{}}}}}}) #Zero{})
= #Refl{}

// Test: (a - b) - c = a - (b + c).
T7
: (E/Equal N/Nat (N/sub (N/sub #Succ{#Succ{#Succ{#Succ{#Succ{#Succ{#Succ{#Succ{#Succ{#Succ{#Zero{}}}}}}}}}}} #Succ{#Succ{#Succ{#Zero{}}}}) #Succ{#Succ{#Zero{}}}) (N/sub #Succ{#Succ{#Succ{#Succ{#Succ{#Succ{#Succ{#Succ{#Succ{#Succ{#Zero{}}}}}}}}}}} (N/add #Succ{#Succ{#Succ{#Zero{}}}} #Succ{#Succ{#Zero{}}})))
= #Refl{}
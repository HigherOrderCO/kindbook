// Checks if one nat is less than another.
// - m: The first nat.
// - n: The second nat.
// = True if m is less than n, False otherwise.
Nat/lt : Nat -> Nat -> Bool
| #Zero    #Zero    = #False
| #Zero    #Succ{n} = #True
| #Succ{m} #Zero    = #False
| #Succ{m} #Succ{n} = (Nat/lt m n)

#test: (Nat/lt #0 #0) == #False
#test: (Nat/lt #0 #1) == #True
#test: (Nat/lt #1 #0) == #False
#test: (Nat/lt #2 #5) == #True
#test: (Nat/lt #5 #2) == #False
#test: (Nat/lt #7 #7) == #False

// Transitivity: if a < b and b < c, then a < c
#test: (Nat/lt #3 #8) == #True

// Irreflexivity: a < a is always False
#test: (Nat/lt #4 #4) == #False

// Performs exponentiation of natural numbers.
// 1st: The base number.
// 2nd: The exponent.
// = The result of raising the base to the power of the exponent.
Nat/exp
: ∀(m: Nat)
  ∀(n: Nat)
  Nat
= λm λ{
  #Zero: #1
  #Succ: λn.pred (Nat/mul m (Nat/exp m n.pred))
}
// Tests the exponentiation function for natural numbers.

// Test: 2⁰ = 1
TO : (Equal Nat (Nat/exp #2 #Zero) #1)
= #Refl

// Test: 2¹ = 2
TEST_1 : (Equal Nat (Nat/exp #2 #1) #2)
= #Refl

// Test: 2² = 4
TEST_2 : (Equal Nat (Nat/exp #2 #2) #4)
= #Refl

// Test: 3² = 9
TEST_3 : (Equal Nat (Nat/exp #3 #2) #9)
= #Refl

// Test: 5¹ = 5
TEST_4 : (Equal Nat (Nat/exp #5 #1) #5)
= #Refl

// Test: 10⁰ = 1
TEST_5 : (Equal Nat (Nat/exp #10 #Zero) #1)
= #Refl

// Test: 3³ = 27
TEST_6 : (Equal Nat (Nat/exp #3 #3) #27)
= #Refl

// Test: 1⁵ = 1
TEST_6 : (Equal Nat (Nat/exp #1 #5) #1)
= #Refl

// Test: 0² = 0
TEST_7 : (Equal Nat (Nat/exp #Zero #2) #Zero)
= #Refl

// Test: Exponentiation property: (a^b)^c = a^(b*c)
TEST_8 : (Equal Nat (Nat/exp (Nat/exp #2 #3) #2) (Nat/exp #2 (Nat/mul #3 #2)))
= #Refl
// Checks if one nat is less than or equal to another.
// - m: The first nat.
// - n: The second nat.
// = True if m is less than or equal to n, False otherwise.
Nat/lte : Nat -> Nat -> Bool
| #Zero    n        = #True
| #Succ{m} #Zero    = #False
| #Succ{m} #Succ{n} = (Nat/lte m n)

#test: (Nat/lte #0 #0) == #True
#test: (Nat/lte #0 #1) == #True
#test: (Nat/lte #1 #0) == #False
#test: (Nat/lte #1 #1) == #True
#test: (Nat/lte #1 #2) == #True
#test: (Nat/lte #2 #1) == #False
#test: (Nat/lte #5 #10) == #True
#test: (Nat/lte #10 #5) == #False

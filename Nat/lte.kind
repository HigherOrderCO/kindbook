// Checks if one natural number is less than or equal to another.
// 1st: The natural number.
// 2nd: The natural number.
// = True if the 1st number is less than or equal to the 2nd, False otherwise.
Nat/lte
: ∀(m: Nat)
  ∀(n: Nat)
  Bool
= λm λn (Bool/or (Nat/lt m n) (Nat/eq m n))
// Test cases for lte function.

// Test: 0 <= 0 is True.
TEST_0
: (Equal Bool (Nat/lte #Zero #Zero) #True)
= #Refl

// Test: 0 <= 1 is True.
TEST_1
: (Equal Bool (Nat/lte #Zero #1) #True)
= #Refl

// Test: 1 <= 0 is False.
TEST_2
: (Equal Bool (Nat/lte #1 #Zero) #False)
= #Refl

// Test: 1 <= 1 is True.
TEST_3
: (Equal Bool (Nat/lte #1 #1) #True)
= #Refl

// Test: 1 <= 2 is True.
TEST_4
: (Equal Bool (Nat/lte #1 #2) #True)
= #Refl

// Test: 2 <= 1 is False.
TEST_5
: (Equal Bool (Nat/lte #2 #1) #False)
= #Refl

// Test: 5 <= 10 is True.
TEST_6
: (Equal Bool (Nat/lte #5 #10) #True)
= #Refl

// Test: 10 <= 5 is False.
TEST_7
: (Equal Bool (Nat/lte #10 #5) #False)
= #Refl
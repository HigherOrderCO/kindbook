// Core Types
// ----------

HVM/RNet : *
= data[]{ #RN{} : HVM/RNet }

HVM/HVM : * -> *
| K = ∀(net: HVM/RNet) (Maybe (Pair/Pair HVM/RNet K))

// Initialization
// --------------

HVM/net_new : HVM/RNet
= #RN{}

// Running
// -------

HVM/run : ∀(X: *) (HVM/HVM X) -> (Maybe X)
= λA λhvm match (hvm HVM/net_new) {
  #None: #None
  #Some{x}: #None
}


// Compares two Bits values.
// - a: The 1st Bits value.
// - b: The 2nd Bits value.
// = The comparison result as Cmp.
Bits/compare : Bits -> Bits -> Cmp
| a b with (Bits/eq a b)
. | #True = #EQ  
. | #False with (Bits/lt a b)  
. . | #True  = #LT 
. . | #False = #GT 


#test: (Bits/compare #E #E) == #EQ
#test: (Bits/compare #E #O{#E}) == #LT
#test: (Bits/compare #I{#E} #E) == #GT
#test: (Bits/compare #O{#O{#E}} #O{#I{#E}}) == #LT
#test: (Bits/compare #I{#I{#E}} #I{#I{#E}}) == #EQ
#test: (Bits/compare #I{#O{#E}} #I{#I{#O{#I{#E}}}}) == #LT
#test: (Bits/compare #I{#I{#O{#E}}} #I{#I{#I{#E}}}) == #LT
// Calculates the length of a Bits structure and returns it with the original Bits.
// - bits: The Bits value to measure.
// = A pair containing the original Bits and its length as a U64.
Bits/length-got-u64 : Bits -> (Pair Bits U64)
| #E       = #Pair{#E 0}
| #O{tail} = 
  let #Pair{rest len} = (Bits/length-got-u64 tail)
  #Pair{#O{rest} (+ 1 len)}
| #I{tail} = 
  let #Pair{rest len} = (Bits/length-got-u64 tail)
  #Pair{#I{rest} (+ 1 len)}

#test: (Pair/get-snd Bits U64 (Bits/length-got-u64 #E)) == 0
#test: (Pair/get-snd Bits U64 (Bits/length-got-u64 #O{#E})) == 1
#test: (Pair/get-snd Bits U64 (Bits/length-got-u64 #I{#O{#I{#E}}})) == 3
#test: (Pair/get-fst Bits U64 (Bits/length-got-u64 #I{#O{#I{#E}}})) == #I{#O{#I{#E}}}
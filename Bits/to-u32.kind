// Converts a Bits representation to U32.
// - bits: The Bits to convert.
// = The U32 representation of the input Bits.
Bits/to-u32 : Bits -> U32
| bits = (Bits/to-u32-go bits 1)

// Helper function for Bits/to-u32.
// - bits: The Bits to convert.
// - mult: The weight for the current bit position.
// = The U32 representation after recursive processing.
Bits/to-u32-go : Bits -> U32 -> U32
| #E       mult = 0
| #O{tail} mult = (Bits/to-u32-go tail (* 2 mult))
| #I{tail} mult = (+ mult (Bits/to-u32-go tail (* 2 mult)))

#test: (Bits/to-u32 #E) == 0
#test: (Bits/to-u32 #O{#I{#E}}) == 2
#test: (Bits/to-u32 #I{#O{#I{#E}}}) == 5

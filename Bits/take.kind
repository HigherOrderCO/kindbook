// Takes the first n bits from a Bits structure.
// - bits: Input Bits structure.
// - n: Number of bits to take.
// = Bits structure with first n bits of input, or all if n > length bits.
Bits/take : Bits -> Nat -> Bits
| bits     #Zero    = #E
| #E       #Succ{n} = #E
| #O{tail} #Succ{n} = #O{(Bits/take tail n)}
| #I{tail} #Succ{n} = #I{(Bits/take tail n)}

#test: (Bits/take #O{#I{#E}} #0) == #E
#test: (Bits/take #O{#I{#E}} #1) == #O{#E}
#test: (Bits/take #O{#I{#E}} #2) == #O{#I{#E}}
#test: (Bits/take #O{#I{#E}} #3) == #O{#I{#E}}
#test: (Bits/take #E #2) == #E
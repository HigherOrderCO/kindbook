// Conditional expression.
// - 1st: The type of the result.
// - 2nd: The boolean condition to evaluate.
// - 3rd: The value to return if the condition is true.
// - 4th: The value to return if the condition is false.
// = Either 3rd or 4th, depending on the condition.
Bool/if : âˆ€(A: *) Bool/Bool -> A -> A -> A
| A #True  t f = t
| A #False t f = f

TEST_0 
: (Equal/Equal Bool/Bool (Bool/if Bool/Bool #True{} #True{} #False{} ) (#True{}))
= #Refl{}

TEST_1 
: (Equal/Equal Bool/Bool (Bool/if Bool/Bool #False{} #True{} #False{} ) (#False{}))
= #Refl{}

TEST_2
: (Equal/Equal Nat/Nat (Bool/if Nat/Nat #False{} #Succ{#Zero{}} #Zero{} ) (#Zero{}))
= #Refl{}


// Conditional expression.
// - 1st: The type of the result.
// - 2nd: The boolean condition to evaluate.
// - 3rd: The value to return if the condition is true.
// - 4th: The value to return if the condition is false.
// = Either 3rd or 4th, depending on the condition.
Bool/if : âˆ€(A: *) Bool -> A -> A -> A
| A #True  t f = t
| A #False t f = f

#test: (Bool/if Bool #True #True #False) == #True
#test: (Bool/if Bool #False #True #False) == #False
#test: (Bool/if Nat #False #1 #Zero) == #Zero

use Bool/ as B/

// Performs logical NAND operation on two boolean values.
// 1st: The 1st boolean value.
// 2nd: The 2nd boolean value.
// = True if at least one of the inputs is False, False if both inputs are True.
B/nand
: ∀(a: B/Bool)
  ∀(b: B/Bool)
  B/Bool
= λa λb (B/not (B/and a b))


//TEST//

use Bool/ as B/
use Equal/ as E/


T0 
: (E/Equal B/Bool (B/nand #True{} #False{}) (#True{}))
= #Refl{}

T1 
: (E/Equal B/Bool (B/nand #True{} #True{}) (#False{}))
= #Refl{}

T2 
: (E/Equal B/Bool (B/nand #False{} #True{}) (#True{}))
= #Refl{}

T3 
: (E/Equal B/Bool (B/nand #False{} #False{}) (#True{}))
= #Refl{}


// Performs logical AND with complement (a & ~b).
// - a: The 1st boolean value.
// - b: The 2nd boolean value.
// = True if 'a' is true and 'b' is false, False otherwise.
Bool/andc : Bool -> Bool -> Bool
| #True  #False = #True
| #True  #True  = #False
| #False b      = #False

TEST_0 
: (Bool/andc #True #False) == #True
= #Refl

TEST_1 
: (Bool/andc #True #True) == #False
= #Refl

TEST_2 
: (Bool/andc #False #True) == #False
= #Refl

TEST_3 
: (Bool/andc #False #False) == #False
= #Refl

// Gets the initial state and tick of a game.
// - S: State type.
// - A: Action type.
// - mach: The state machine.
// - game: The game.
// = A pair of the initial state and tick.
UG/SM/get_initial_state : ∀(S: *) ∀(A: *) (UG/SM/Mach S A) -> (UG/SM/Game S A) -> (Pair S UG/SM/Tick)
| S A #Mach{ticks_per_second genesis_tick cached_tick state_logs action_logs action_eq} game =
  match state_logs {
    #None: #Pair{fst: (UG/SM/Game/init S A game) snd: genesis_tick}
    #Some{value}: #Pair{fst: (UG/SM/StateLogs/StateNode/state S value) snd: (UG/SM/StateLogs/StateNode/tick S value)}
  }


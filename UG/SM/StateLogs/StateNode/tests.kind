// Tests for UG/SM/StateLogs/StateNode getters and setters

// Create a sample StateNode for testing
sample_node : âˆ€(S: *) (UG/SM/StateLogs/StateNode S)
| S = #StateNode{tick: #5 keep: #3 life: #7 state: #True older: #None}

// Tests for getters
#test: (UG/SM/StateLogs/StateNode/tick  Bool sample_node) == #5
#test: (UG/SM/StateLogs/StateNode/keep  Bool sample_node) == #3
#test: (UG/SM/StateLogs/StateNode/life  Bool sample_node) == #7
#test: (UG/SM/StateLogs/StateNode/state Bool sample_node) == #True
#test: (UG/SM/StateLogs/StateNode/older Bool sample_node) == #None

// Tests for setters
#test: (UG/SM/StateLogs/StateNode/tick  Bool (UG/SM/StateLogs/StateNode/set-tick  Bool #10 sample_node)) == #10
#test: (UG/SM/StateLogs/StateNode/keep  Bool (UG/SM/StateLogs/StateNode/set-keep  Bool #4  sample_node)) == #4
#test: (UG/SM/StateLogs/StateNode/life  Bool (UG/SM/StateLogs/StateNode/set-life  Bool #8  sample_node)) == #8
#test: (UG/SM/StateLogs/StateNode/state Bool (UG/SM/StateLogs/StateNode/set-state Bool #False sample_node)) == #False
#test: (UG/SM/StateLogs/StateNode/older Bool (UG/SM/StateLogs/StateNode/set-older Bool #Some{sample_node} sample_node)) == #Some{sample_node}
// State machine.
// - S: State type.
// - A: Action type.
data UG/SM/Mach (S: *) (A: *) {
  #Mach {
    ticks-per-second: U64
    genesis-tick: UG/SM/Tick
    cached-tick: UG/SM/Tick
    state-logs: (UG/SM/StateLogs S)
    action-logs: (UG/SM/ActionLogs A)
    action-eq: A -> A -> Bool
  }
}

// Gets the action logs from a state machine.
// - S: State type.
// - A: Action type.
// - mach: The state machine.
// = The action logs.
UG/SM/Mach/action-logs : ∀(S: *) ∀(A: *) (UG/SM/Mach S A) -> (UG/SM/ActionLogs A)
| S A #Mach{ticks-per-second genesis-tick cached-tick state-logs action-logs action-eq}
= action-logs


UG/SM/Mach/cached-tick : ∀(S: *) ∀(A: *) (UG/SM/Mach S A) -> UG/SM/Tick
| S A #Mach{ticks-per-second genesis-tick cached-tick state-logs action-logs action-eq}
= cached-tick


// Updates the cached tick of a machine state.
// - S: State type.
// - A: Action type.
// - mach: Machine state to update.
// - new-tick: New tick value.
// = Updated Mach S A with potentially modified cached-tick.
UG/SM/update-cached-tick : ∀(S: *) ∀(A: *) (UG/SM/Mach S A) -> UG/SM/Tick -> (UG/SM/Mach S A)
| S A #Mach{ticks-per-second genesis-tick cached-tick state-logs action-logs action-eq} new-tick =
  if (U64/lt new-tick cached-tick) {
    #Mach{ticks-per-second genesis-tick new-tick state-logs action-logs action-eq}
  } else {
    #Mach{ticks-per-second genesis-tick cached-tick state-logs action-logs action-eq}
  }

#test: (UG/SM/update-cached-tick U64 Bool (UG/SM/new-mach U64 Bool 10 (λx λy #False)) 5) == (UG/SM/new-mach U64 Bool 10 (λx λy #False))
#test: (UG/SM/update-cached-tick U64 Bool (UG/SM/new-mach U64 Bool 10 (λx λy #False)) 200) == (UG/SM/new-mach U64 Bool 10 (λx λy #False))

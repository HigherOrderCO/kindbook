// Checks if an action is in a list of actions.
// - S: State type.
// - A: Action type.
// - mach: The state machine.
// - a: The action to search for.
// - xs: The list of actions to search in.
// = True if the action is in the list, False otherwise.
UG/SM/action_in_list : ∀(S: *) ∀(A: *) (UG/SM/Mach S A) -> A -> (List A) -> Bool
| S A #Mach{ticks_per_second genesis_tick cached_tick state_logs action_logs action_eq} a #Nil = #False
| S A #Mach{ticks_per_second genesis_tick cached_tick state_logs action_logs action_eq} a #Cons{head tail} = 
  if (action_eq a head) {
    #True
  } else {
    (UG/SM/action_in_list S A #Mach{ticks_per_second genesis_tick cached_tick state_logs action_logs action_eq} a tail)
  }

#test: (UG/SM/action_in_list Nat Nat #Mach{0 0 0 #None (BinMap/new (List Nat)) Nat/eq} #0 #Nil) == #False
#test: (UG/SM/action_in_list Nat Nat #Mach{0 0 0 #None (BinMap/new (List Nat)) Nat/eq} #0 [#0]) == #True

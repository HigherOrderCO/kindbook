// Finds the closest point on a polygon segment to a given point.
// - point: The reference point.
// - segment: A pair of V2 points representing a line segment.
// = The closest point on the segment to the reference point.
UG/Shape/closest-point-on-polygon/go : V2 -> (Pair V2 V2) -> V2
| point #Pair{v1 v2} = (V2/point-to-segment-distance point v1 v2)

// Finds the closest point on a polygon to a given point.
// - point: The reference point.
// - vertices: List of vertices defining the polygon.
// = The closest point on the polygon to the reference point.
UG/Shape/closest-point-on-polygon : V2 -> (List V2) -> V2
| point vertices = 
  let segments = (UG/Shape/segments vertices)
  let points   = (List/map (Pair V2 V2) V2 (UG/Shape/closest-point-on-polygon/go point) segments)
  let sorted   = (List/sort V2 (λp1 λp2 (F64/lt (V2/length (V2/sub point p1)) (V2/length (V2/sub point p2)))) points)
  match (List/head V2 sorted) {
    #None:     #V2{x: 10000.0 y: 10000.0}
    #Some{p}: p
  }

#test: (UG/Shape/closest-point-on-polygon #V2{x: 0.0 y: 0.0} [#V2{x: 1.0 y: 1.0} #V2{x: 2.0 y: 2.0} #V2{x: 1.0 y: 2.0}]) == #V2{x: 1.0 y: 1.0}

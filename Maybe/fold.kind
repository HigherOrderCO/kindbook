// Folds over a Maybe value.
// - A: The type of the value inside Maybe.
// - m: The Maybe value to fold over.
// - P: The type of the result.
// - none: The value to return if the Maybe is None.
// - some: The function to apply to the value if the Maybe is Some.
// = Either the default value (if None) or the result of applying f to the value (if Some).
Maybe/fold : ∀(A: *) (Maybe A) -> ∀(P: *) P -> (A -> P) -> P
| A #None        P none some = none
| A #Some{value} P none some = (some value)

#test: (Maybe/fold U64 #None U64 0 (λx (+ x 1))) == 0
#test: (Maybe/fold U64 #Some{5} U64 0 (λx (+ x 1))) == 6

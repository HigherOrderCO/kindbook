// Applies a function that returns a Maybe to a Maybe value.
// - A: Input type.
// - B: Output type.
// - m: The input Maybe value.
// - f: The function to apply.
// = The result of applying f to the value inside m, if it exists.
Maybe/bind : ∀(A: *) ∀(B: *) (Maybe A) -> (A -> (Maybe B)) -> (Maybe B)
| A B #None    f = #None
| A B #Some{x} f = (f x)

#test: (Maybe/bind U64 U64 #None (λx (Maybe/pure U64 (+ x 1)))) == #None
#test: (Maybe/bind U64 U64 (Maybe/pure U64 41) (λx (Maybe/pure U64 (+ x 1)))) == (Maybe/pure U64 42)

// Parses a name from the input.
// = A Parser that returns a String containing the parsed name, or fails if no valid name is found.
Parser/parse-name : (Parser String)
| state = match (Parser/take-while Parser/is-name-char state) {
  #Done{reply}: match reply {
    #Reply{_ value}: match value {
      #Nil: (Parser/fail _ "Expected a name" state)
      #Cons{head tail}: #Done{reply}
    }
  }
  #Fail{e}: #Fail{e}
}

#test: (Parser/parse-name #State{"abc_123 def" #0}) == (#Done{#Reply{(#State{" def" #7}) "abc_123"}})
#test: (Parser/parse-name #State{" abc" #0}) == (#Fail{#Error{#0 "Expected a name"}})
#test: (Parser/parse-name #State{"abc-def.ghi" #0}) == (#Done{#Reply{(#State{"" #11}) "abc-def.ghi"}})

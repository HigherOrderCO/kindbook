// Consumes characters from the input as long as they satisfy the given predicate.
// - pred: A function that takes a Char (U32) and returns a Bool, used as the predicate.
// = A Parser that returns a String containing the consumed characters.
Pair/take-while
: ∀(pred: ∀(c: Char/Char) Bool/Bool)
  (Pair/Parser String/String)
= λpred λs
  let input     = (Pair/State/input s)
  let consumed  = (List/take-while Char/Char pred input)
  let count     = (String/length consumed)
  let new-index = (Nat/add (Pair/State/index s) count)
  let new-input = (String/drop count input)
  // (#Done{#MkReply{#MkState{new-input new-index} consumed}})
  ?a

// Parses as many occurrences of the given parser as possible.
// - A: Input type.
// - p: Parser to be repeatedly applied.
// = Parser that returns a list of all successfully parsed elements.
Parser/parse-many : ∀(A: *) (Parser A) -> (Parser (List A))
| A p = (Parser/parse-many/go A p #Nil)

// Accumulates parsed results.
// - A: Input type.
// - p: Parser to be repeatedly applied.
// - acc: Accumulator list of already parsed elements.
// = Parser that returns the final list of all parsed elements.
Parser/parse-many/go : ∀(A: *) (Parser A) -> (List A) -> (Parser (List A))
| A p acc state = match (p state) {
  #Done{r}: match r {
    #Reply{state value}: (Parser/parse-many/go A p #Cons{value acc} state)
  }
  #Fail{e}: #Done{#Reply{state (List/reverse A acc)}}
}

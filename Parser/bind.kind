// Binds two parsers together
// - A: The type of the first parser's result
// - B: The type of the second parser's result
// - p: The first parser
// - f: A function that takes the result of the first parser and returns a new parser
// = A new parser that combines the results of both parsers
Parser/bind : ∀(A: *) ∀(B: *) (Parser A) -> (A -> (Parser B)) -> (Parser B)
| A B p f s = match (p s) {
  #Done: λ{ #Reply{state value}: (f value state) }
  #Fail: λe #Fail{e}
}


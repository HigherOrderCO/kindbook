// Parses a single character, including escape sequences.
// = The parsed character.
Parser/parse_char : (Parser Char)
= do Parser {
  ask mc = Parser/advance_one
  match mc {
    #None: (Parser/fail Char "Unexpected end of input")
    #Some{c}: if (Char/eq c '\\') {
      Parser/parse_escape_sequence
    } else {
      (Parser/pure Char c)
    }
  }
}

#test: (Parser/parse_char #State{"abc"    0}) == #Done{#Reply{#State{"bc"  1} 'a'}}
#test: (Parser/parse_char #State{"bc"     0}) == #Done{#Reply{#State{"c"   1} 'b'}}
#test: (Parser/parse_char #State{"\\nabc" 0}) == #Done{#Reply{#State{"abc" 2} '\n'}}
#test: (Parser/parse_char #State{"\\xabc" 0}) == #Fail{#Error{2 "invalid_escape_char:x"}}

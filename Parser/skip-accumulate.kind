// Skips trivia and accumulates skipped characters
// - acc: Accumulated skipped characters
// - cs: Input string
// = Pair of skipped count and remaining input
Parser/skip-accumulate : Nat -> String -> (Pair Nat String)
| acc #Nil        = #Pair{acc #Nil}
| acc #Cons{c cs} = 
  if (Char/is-space c) {
    (Parser/skip-accumulate (#Succ{acc}) cs)
  } else if (Parser/is-comment (#Cons{c cs})) {
    (Parser/skip-comment acc cs)
  } else {
    #Pair{acc (#Cons{c cs})}
  }

#test: (Parser/skip-accumulate #0 "   abc") == #Pair{#3 "abc"}
#test: (Parser/skip-accumulate #0 "abc") == #Pair{#0 "abc"}
#test: (Parser/skip-accumulate #0 "  // comment\nabc") == #Pair{#13 "abc"}
#test: (Parser/skip-accumulate #0 "") == #Pair{#0 ""}
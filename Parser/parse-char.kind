// Parses a single character, including escape sequences.
// = The parsed character.
Parser/parse-char : (Parser Char)
= do Parser {
  ask mc = Parser/advance-one
  match mc {
    #None: (Parser/fail Char "Unexpected end of input")
    #Some{c}: if (Char/eq c '\\') {
      Parser/parse-escape-sequence
    } else {
      (Parser/pure Char c)
    }
  }
}

#test: (Parser/parse-char #State{"abc" #0}) == #Done{#Reply{#State{"bc" #1} 'a'}}
#test: (Parser/parse-char #State{"bc" #0}) == #Done{#Reply{#State{"c" #1} 'b'}}
#test: (Parser/parse-char #State{"\\nabc" #0}) == #Done{#Reply{#State{"abc" #2} '\n'}}
#test: (Parser/parse-char #State{"\\xabc" #0}) == #Fail{#Error{#2 "invalid-escape-char:x"}}

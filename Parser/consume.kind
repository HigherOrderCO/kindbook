// Attempts to consume a specific string from the input.
// - target: The target string to consume.
// = A Parser that returns unit if successful, or fails if the target string is not found at the current position.
Pair/consume
: ∀(target: String)
  (Pair/Parser Unit)
= λtarget λstate
  let input = (Pair/State/input state)
  let index = (Pair/State/index state)
  (Bool/if (Result (Pair/Reply Unit) Pair/Error)
    (String/starts-with input target)
    (#Done{
      #MkReply{
        state: #MkState{
          input: (String/drop (List/length U32 target) input)
          index: (Nat/add index (List/length U32 target))
        }
        value: #Unit{}
      }
    })
    (#Fail{
      #MkError{
        index: index
        error: (String/append "Expected " target)
      }
    })
  )

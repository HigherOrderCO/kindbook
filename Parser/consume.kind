// Consumes a specific string from the input.
// - target: String to consume.
// = Parser that returns unit if successful, or fails if not found.
Parser/consume : String -> (Parser Unit)
| target #State{input index} =
  if (String/starts_with input target) {
    #Done{
      #Reply{
        state: 
          let length = (String/length_u64 target)
          #State{
            input: (String/drop input (U64/to_nat length))
            index: (+ index length)
          }
        value: #Unit
      }
    }
  } else {
    #Fail{
      #Error{
        index: index
        error: (String/append "Expected " target)
      }
    }
  }

#test: ((Parser/consume "abc") (#State{input: "abcdef" index: 0})) == (#Done{#Reply{#State{input: "def" index: 3} #Unit}})
#test: ((Parser/consume "abc") (#State{input: "abxdef" index: 0})) == (#Fail{#Error{0 "Expected abc"}})
#test: ((Parser/consume "")    (#State{input: "abcdef" index: 0})) == (#Done{#Reply{#State{input: "abcdef" index: 0} #Unit}})

use Either/ as E/

// Represents a value of one of two possible types.
// 1st: The type of the left value.
// 2nd: The type of the right value.
// = Returns left or right value.
E/Either
: ∀(A: *)
  ∀(B: *)
  *
= λA λB data[]{
  #Lft{ value: A } : (E/Either A B)
  #Rgt{ value: B } : (E/Either A B)
}


//TEST//

use Bool/ as B/
use Equal/ as EQ/
use Nat/ as N/
use Either/ as E/

// Test 1: Construct a Left value
E/test-left
: (E/Either N/Nat B/Bool)
= #Lft{#Zero{}} 

// Test 2: Construct a Right value
E/test-right
: (E/Either N/Nat B/Bool)
= #Rgt{#True{}} 

// Test 3: Equality check for Left
E/T0
: (EQ/Equal B/Bool (E/test-right) (#Rgt{#True{}}))
= #Refl{}

// Test 4: Equality check for Right
E/T1
: (EQ/Equal B/Bool (E/test-left) (#Lft{#Zero{}}))
= #Refl{}

